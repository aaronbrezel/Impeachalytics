ownerOccupiedHousing["2010 % of rentable units"] = 100*(ownerOccupiedHousing[4]/demData[4])
ownerOccupiedHousing["2000 rented units"] = ownerOccupiedHousing[6]-ownerOccupiedHousing[7]
ownerOccupiedHousing[,c(colnames(demData[16]),colnames(demData[17]))] = c(demData[16],demData[17])
ownerOccupiedHousing["2000 % of rentable units"] = 100*(ownerOccupiedHousing[8]/demData[12])
ownerOccupiedHousing["change in rented units"] = ownerOccupiedHousing[4]-ownerOccupiedHousing[8]
ownerOccupiedHousing["percent change in rented units"] = ownerOccupiedHousing[9]/ownerOccupiedHousing[9]*100
ownerOccupiedHousing = demData[,c(1,8,9)]
ownerOccupiedHousing["2010 rented units"] = ownerOccupiedHousing[2]-ownerOccupiedHousing[3]
ownerOccupiedHousing["2010 % of rentable units"] = 100*(ownerOccupiedHousing[4]/demData[4])
ownerOccupiedHousing[,c(colnames(demData[16]),colnames(demData[17]))] = c(demData[16],demData[17])
ownerOccupiedHousing["2000 rented units"] = ownerOccupiedHousing[6]-ownerOccupiedHousing[7]
ownerOccupiedHousing["2000 % of rentable units"] = 100*(ownerOccupiedHousing[8]/demData[12])
ownerOccupiedHousing["change in rented units"] = ownerOccupiedHousing[4]-ownerOccupiedHousing[8]
ownerOccupiedHousing["percent change in rented units"] = ownerOccupiedHousing[9]/ownerOccupiedHousing[9]*100
ownerOccupiedHousing = demData[,c(1,8,9)]
ownerOccupiedHousing["2010 rented units"] = ownerOccupiedHousing[2]-ownerOccupiedHousing[3]
ownerOccupiedHousing["2010 % of rentable units"] = 100*(ownerOccupiedHousing[4]/demData[4])
ownerOccupiedHousing[,c(colnames(demData[16]),colnames(demData[17]))] = c(demData[16],demData[17])
ownerOccupiedHousing["2000 rented units"] = ownerOccupiedHousing[6]-ownerOccupiedHousing[7]
ownerOccupiedHousing["2000 % of rentable units"] = 100*(ownerOccupiedHousing[8]/demData[12])
ownerOccupiedHousing["change in rented units"] = ownerOccupiedHousing[4]-ownerOccupiedHousing[8]
ownerOccupiedHousing["change in rented units per person"] = ownerOccupiedHousing[9]/demData[2]
ownerOccupiedHousing["change in rented units per person"] = 100000*ownerOccupiedHousing[9]/demData[2]
ownerOccupiedHousing["change in rented units per person"] = ownerOccupiedHousing[9]/demData[2]
ownerOccupiedHousing["change in rented units per person"] = ownerOccupiedHousing[9]/demData[13]
ownerOccupiedHousing["change in rented units per household"] = 100*ownerOccupiedHousing[9]/demData[13]
ownerOccupiedHousing = demData[,c(1,8,9)]
ownerOccupiedHousing["2010 rented units"] = ownerOccupiedHousing[2]-ownerOccupiedHousing[3]
ownerOccupiedHousing["2010 % of rentable units"] = 100*(ownerOccupiedHousing[4]/demData[4])
ownerOccupiedHousing[,c(colnames(demData[16]),colnames(demData[17]))] = c(demData[16],demData[17])
ownerOccupiedHousing["2000 rented units"] = ownerOccupiedHousing[6]-ownerOccupiedHousing[7]
ownerOccupiedHousing["2000 % of rentable units"] = 100*(ownerOccupiedHousing[8]/demData[12])
ownerOccupiedHousing["change in rented units"] = ownerOccupiedHousing[4]-ownerOccupiedHousing[8]
ownerOccupiedHousing["change in rented units per household"] = 100*ownerOccupiedHousing[9]/demData[13]
ownerOccupiedHousing["change in rented units per household"] = 100*(ownerOccupiedHousing[9])/demData[13]
ownerOccupiedHousing["change in rented units per household"] = 100*(ownerOccupiedHousing[9])/demData[13100*]
ownerOccupiedHousing[3]/ownerOccupiedHousing[2]*100
ownerOccupiedHousing[7]/ownerOccupiedHousing[6]*100
demData[,c(1,demData[6]-demData[4])]
demData[6]-demData[4]
demData[6]-demData[14]
demData[14]
demData[6]
demData[6]-demData[14]
demData[1]
demData[3]/demData[2]
1-(demData[3]/demData[2])
sum(demData[2])
sum(demData[2,4]+demData[2,2])
demData[2,4]
sum(demData[4,2]+demData[2,2])
demData[,2]
demData[2]
demData[2]/sum(demData[2])
ownerOccupiedHousing = demData[,c(1,8,9)]
demData = read.csv("C:/Users/aaron/Downloads/nyc_census_by_boro_2000-2010.csv")
View(demData)
ownerOccupiedHousing = demData[,c(1,8,9)]
ownerOccupiedHousing["2010 rented units"] = ownerOccupiedHousing[2]-ownerOccupiedHousing[3]
ownerOccupiedHousing["2010 % of rentable units"] = 100*(ownerOccupiedHousing[4]/demData[4])
ownerOccupiedHousing[,c(colnames(demData[16]),colnames(demData[17]))] = c(demData[16],demData[17])
ownerOccupiedHousing["2000 rented units"] = ownerOccupiedHousing[6]-ownerOccupiedHousing[7]
ownerOccupiedHousing["2000 % of rentable units"] = 100*(ownerOccupiedHousing[8]/demData[12])
ownerOccupiedHousing["change in rented units"] = ownerOccupiedHousing[4]-ownerOccupiedHousing[8]
ownerOccupiedHousing["change in rented units per household"] = 100*(ownerOccupiedHousing[9])/demData[13]
ownerOccupiedHousing[3]/ownerOccupiedHousing[2]*100
ownerOccupiedHousing[7]/ownerOccupiedHousing[6]*100
100-ownerOccupiedHousing[5]
popPercentChange = demData[,c(1,2,10)]
popPercentChange["people added"] = popPercentChange[2]-popPercentChange[3]
popPercentChange["percent change"] = 100*((popPercentChange[2]-popPercentChange[3])/popPercentChange[3])
demData = read.csv("C:/Users/aaron/Downloads/nyc_census_by_boro_2000-2010.csv")
popPercentChange = demData[,c(1,2,10)]
popPercentChange["percent change"] = 100*((popPercentChange[2]-popPercentChange[3])/popPercentChange[3])
popPercentChange["people added"] = popPercentChange[2]-popPercentChange[3]
View(popPercentChange)
read.csv("citibikeTripdata-Jan-2019.csv")
read.csv("citibikeTripdata-Jan-2019.csv")
getwd()
read.csv("Columbia Computer Science/Introduction to Data Visualization/Exploratory Data Analysis/citibikeTripdata-Jan-2019.csv")
citibikeData <- read.csv("Columbia Computer Science/Introduction to Data Visualization/Exploratory Data Analysis/citibikeTripdata-Jan-2019.csv")
view(citibikeData)
View(citibikeData)
library(dpylr)
library(dplyr)
citibikeData <- read.csv("Columbia Computer Science/Introduction to Data Visualization/Exploratory Data Analysis/citibikeTripdata-Jan-2019.csv")
citibikeData[start.station.name]
citibikeData["start.station.name"]
distinct(citibikeData["start.station.name"])
citibikeData <- read.csv("Columbia Computer Science/Introduction to Data Visualization/Exploratory Data Analysis/201901-citibike-tripdata.csv")
distinct(citibikeData["start.station.name"])
group_by(citibikeData,"start.station.name")
library(dplyr)
group_by(citibikeData,"start.station.name")
citibikeData <- read.csv("Columbia Computer Science/Introduction to Data Visualization/Exploratory Data Analysis/201901-citibike-tripdata.csv")
group_by(citibikeData,"start.station.name")
View(group_by(citibikeData,"start.station.name"))
aggregate(nrow(citibikeData), by=citibikeData["start.station.name"])
aggregate(nrow(citibikeData), by=citibikeData["start.station.name"], fun=sum)
aggregate(nrow(citibikeData), by=citibikeData["start.station.name"], FUN=sum)
citibikeData %>% group_by("start.station.name") %>% summarise(sum(nrow(citibikeData)))
citibikeData %>% group_by("start.station.name") %>% summarise(sum(nrow))
citibikeData %>% group_by("start.station.name")
rowsum(citibikeData, "start.station.name")
rowsum(citibikeData, "start.station.name")
rowsum(citibikeData, group = "start.station.name")
gender_distribution_by_station <- citibikeData %>%
select(start.station.name, genderDist) %>%
group_by(start.station.name) %>%
summarise(genderDist = nrow(subset(citibikeData, gender==2))/nrow(citibikeData))
gender_distribution_by_station <- citibikeData %>%
select(start.station.name) %>%
group_by(start.station.name) %>%
summarise(genderDist = nrow(subset(citibikeData, gender==2))/nrow(citibikeData))
View(gender_distribution_by_station)
View(gender_distribution_by_station)
total_rows <- nrow(citibikeData)
gender_distribution_by_station <- citibikeData %>%
select(start.station.name, gender) %>%
group_by(start.station.name) %>%
summarise(genderDist = nrow(subset(citibikeData, gender==2))/total_rows)
(citibikeData)
subset(citibikeData, gender==2)
gender_distribution_by_station <- female_rides %>%
select(start.station.name) %>%
group_by(start.station.name) %>%
summarise(genderDist = nrow(female_rides)/total_rows)
female_rides <- subset(citibikeData, gender==2)
gender_distribution_by_station <- female_rides %>%
select(start.station.name) %>%
group_by(start.station.name) %>%
summarise(genderDist = nrow(female_rides)/total_rows)
View(gender_distribution_by_station)
gender_distribution_by_station <- female_rides %>%
gender_distribution_by_station <- female_rides %>%
gender_distribution_by_station <- female_rides %>%
select(start.station.name) %>%
group_by(start.station.name) %>%
summarise(genderDist = nrow(subset(female_rides, start.station.name = start.station.name))/total_rows)
gender_distribution_by_station <- female_rides %>%
select(start.station.name) %>%
group_by(start.station.name)
View(gender_distribution_by_station)
data <- read.csv("C:/Users/aaron/Downloads/dds_data.csv")
View(data)
library(dplyr)
sum(data[,4])
sum(data[,5])
data %>% group_by(Ethnicity)
data %>% group_by(Ethnicity) %>% sum(Expenditures)
data[,"Expenditures"] %>% group_by(Ethnicity) %>% sum(Expenditures)
data %>% group_by(Ethnicity) %>% sum(Expenditures)
data %>% group_by(Ethnicity)
data %>% group_by(Ethnicity) %>% summarise(Expenditures = sum(Expenditures))
data$totalEnthnicity = data %>% group_by(Ethnicity) %>% summarise(totalEnthnicity = sum(Ethnicity))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = sum(Expenditures), Ethnicity = count(Ethnicity))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = sum(Expenditures), count(Ethnicity))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = avg(Expenditures))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = average(Expenditures))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = mean(Expenditures))
data %>% group_by(Ethnicity,Age_Cohort) %>% summarise(Expenditures = mean(Expenditures))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = mean(Expenditures), numEntries = nrows(data))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = mean(Expenditures), numEntries = nrow(data))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = mean(Expenditures), numEntries = nrow(data[,"Ethnicity"]))
data %>% group_by(Ethnicity) %>% summarise(Expenditures = mean(Expenditures), numEntries = sum(data))
data %>% group_by(Ethnicity, Age_Cohort=="6-12") %>% summarise(Expenditures = mean(Expenditures), numEntries = sum(data))
data %>% group_by(Ethnicity, Age_Cohort=="6-12") %>% summarise(Expenditures = mean(Expenditures))
data %>% group_by(Age_Cohort) %>% summarise(Expenditures = mean(Expenditures))
data %>% group_by(Ethnicity, Age_Cohort) %>% summarise(Expenditures = mean(Expenditures))
View(data %>% group_by(Ethnicity, Age_Cohort) %>% summarise(Expenditures = mean(Expenditures)))
View(data %>% group_by(Ethnicity, Age_Cohort) %>% summarise(Expenditures = mean(Expenditures), count = rowsum(data)))
View(data %>% group_by(Ethnicity, Age_Cohort) %>% summarise(Expenditures = mean(Expenditures), count = rowsum(data)))
View(data %>% group_by(Ethnicity, Age_Cohort) %>% summarise(Expenditures = mean(Expenditures), count = n()))
library("dplyr")
read.csv("C:/Users/aaron/Downloads/Florida TIGER_BUILD Grants.csv")
all_grants <- read.csv("C:/Users/aaron/Downloads/Florida TIGER_BUILD Grants.csv")
View(all_grants)
test <- all_grants[1,1]
test
test <- all_grants[1,4]
test
test <- all_grants[1,6]
test
test <- all_grants[1,7]
test
test <- all_grants[1,9]
test
as.character(test)
typeof(all_grants)
as.data.frame(all_grants)
all_grants <- as.data.frame(all_grants)
View(all_grants)
test <- all_grants[1,9]
test
typeof(test)
as.character(all_grants[,9])
all_grants[1,9]
typeof(all_grants[1,9])
all_grants <- as.character(all_grants[,9])
all_grants <- read.csv("C:/Users/aaron/Downloads/Florida TIGER_BUILD Grants.csv")
all_grants <- as.data.frame(all_grants)
all_grants[,9] <- as.character(all_grants[,9])
all_grants[1,9]
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
View(approved_grants)
approved_grants$GrantAmount <= as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
approved_grants$GrantAmount <- as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants$Funding.Request <- as.numeric(gsub("[\\$,]", "", approved_grants$Funding.Request))
approved_grants$Project.Cost <- as.numeric(gsub("[\\$,]", "", approved_grants$Project.Cost))
library("jsonlite")
write_json(approved_grants,"C:/Users/aaron/Downloads/")
write_json(approved_grants,"C:/Users/aaron/Downloads")
toJSON(test, approved_grants)
write_json(approved_grants, "C:/Users/aaron/Downloads/approvedfloridagrants.json")
library("dplyr")
library("jsonlite")
all_grants <- read.csv("C:/Users/aaron/Downloads/Florida TIGER_BUILD Grants.csv") #reads in csv
all_grants <- as.data.frame(all_grants) #converts list to data frame
all_grants[,9] <- as.character(all_grants[,9]) #sets Grant Amount Column to character for easier filtering
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
View(approved_grants)
approved_grants$GrantAmount <- as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants$Funding.Request <- as.numeric(gsub("[\\$,]", "", approved_grants$Funding.Request))
approved_grants$Project.Cost <- as.numeric(gsub("[\\$,]", "", approved_grants$Project.Cost))
approved_grants <- approved_grants[with(approved_grants, order(Year,Project.Type))]
approved_grants <- approved_grants[with(approved_grants, order(approved_grants$Year,approved_grants$Project.Type))]
approved_grants <- approved_grants[order(approved_grants$Year,approved_grants$Project.Type)]
approved_grants <- approved_grants[order(approved_grants[,2],approved_grants[,12])]
approved_grants[order(approved_grants[,2],approved_grants[,12])]
arrange(approved_grants, approved_grants$Year)
arrange(approved_grants, approved_grants$Year, approved_grants$Project.Type)
arrange(approved_grants, approved_grants$Year, desc(approved_grants$Project.Type))
project_type_order <- c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian")
approved_grants <- arrange(approved_grants, approved_grants$Year, desc(approved_grants$Project.Type))
approved_grants <- approved_grants[match(project_type_order, approved_grants$Project.Type)]
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
approved_grants$GrantAmount <- as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants$Funding.Request <- as.numeric(gsub("[\\$,]", "", approved_grants$Funding.Request))
approved_grants$Project.Cost <- as.numeric(gsub("[\\$,]", "", approved_grants$Project.Cost))
project_type_order <- c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian")
approved_grants <- arrange(approved_grants, approved_grants$Year, desc(approved_grants$Project.Type))
approved_grants <- approved_grants[match(project_type_order, approved_grants$Project.Type),]
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
approved_grants$GrantAmount <- as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants$Funding.Request <- as.numeric(gsub("[\\$,]", "", approved_grants$Funding.Request))
approved_grants$Project.Cost <- as.numeric(gsub("[\\$,]", "", approved_grants$Project.Cost))
project_type_order <- c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian")
approved_grants <- arrange(approved_grants, approved_grants$Year, desc(approved_grants$Project.Type))
approved_grants[order(match(project_type_order, approved_grants$Project.Type))]
approved_grants <- approved_grants[order(match(project_type_order, approved_grants$Project.Type))]
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
approved_grants$GrantAmount <- as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants$Funding.Request <- as.numeric(gsub("[\\$,]", "", approved_grants$Funding.Request))
approved_grants$Project.Cost <- as.numeric(gsub("[\\$,]", "", approved_grants$Project.Cost))
project_type_order <- c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian")
approved_grants <- arrange(approved_grants, approved_grants$Year, desc(approved_grants$Project.Type))
approved_grants <- approved_grants[order(match(project_type_order, approved_grants$Project.Type)),]
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
approved_grants$GrantAmount <- as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants$Funding.Request <- as.numeric(gsub("[\\$,]", "", approved_grants$Funding.Request))
approved_grants$Project.Cost <- as.numeric(gsub("[\\$,]", "", approved_grants$Project.Cost))
project_type_order <- c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian")
approved_grants <- arrange(approved_grants, approved_grants$Year, desc(approved_grants$Project.Type))
approved_grants <- approved_grants[,order(match(project_type_order, approved_grants$Project.Type))]
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
approved_grants$GrantAmount <- as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants$Funding.Request <- as.numeric(gsub("[\\$,]", "", approved_grants$Funding.Request))
approved_grants$Project.Cost <- as.numeric(gsub("[\\$,]", "", approved_grants$Project.Cost))
project_type_order <- c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian")
approved_grants <- arrange(approved_grants, approved_grants$Year, desc(approved_grants$Project.Type))
approved_grants <- approved_grants[with(order(match(project_type_order, approved_grants$Project.Type)))]
approved_grants <- arrange(approved_grants, approved_grants$Year, match(project_type_order, approved_grants$Project.Type))
approved_grants <- arrange(approved_grants, approved_grants$Year, match(project_type_order, approved_grants$Project.Type))
approved_grants$Project.Type <- factor(approved_grants$Project.Type, levels = c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian"))
approved_grants <- arrange(approved_grants, approved_grants$Year, approved_grants$Project.Type)
for (i in approved_grants){
print (i)
}
for (row in 1:nrow(approved_grants)){
print (approved_grants[row,2])
}
for (row in 1:nrow(approved_grants)){
year <- approved_grants[row,2]
if (year == approved_grants[row-1,2]){
print("same Year")
}
}
for (row in 1:nrow(approved_grants)){
year <- approved_grants[row,2]
if (year = approved_grants[row-1,2]){
print("same Year")
}
}
approved_grants[0,1]
approved_grants[1,1]
for (row in 1:nrow(approved_grants)){
year <- approved_grants[row,2]
if (year == approved_grants[(row-1),2]){
print("same Year")
}
}
all_grants <- read.csv("C:/Users/aaron/Downloads/Florida TIGER_BUILD Grants.csv") #reads in csv
all_grants <- as.data.frame(all_grants) #converts list to data frame
all_grants[,9] <- as.character(all_grants[,9]) #sets Grant Amount Column to character for easier filtering
all_grants[,2] <- as.integer(all_grants[,2])
approved_grants <- all_grants %>% filter(GrantAmount != "#N/A")
approved_grants$GrantAmount <- as.numeric(gsub("[\\$,]", "", approved_grants$GrantAmount))
approved_grants$Funding.Request <- as.numeric(gsub("[\\$,]", "", approved_grants$Funding.Request))
approved_grants$Project.Cost <- as.numeric(gsub("[\\$,]", "", approved_grants$Project.Cost))
project_type_order <- c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian")
approved_grants$Project.Type <- factor(approved_grants$Project.Type, levels = c("Road", "Maritime", "Freight Rail", "Transit", "Bicycle and Pedestrian")) #Changes to factor for easier sorting
approved_grants <- arrange(approved_grants, approved_grants$Year, approved_grants$Project.Type) #sorts by year and project type
approved_grants[1,1]
approved_grants[1,2]
approved_grants[0,2]
for (row in 1:nrow(approved_grants)){
year <- approved_grants[row,2]
if (year == approved_grants[(row-1),2]){
print("same Year")
}
}
old_year <- 2009
for (row in 1:nrow(approved_grants)){
year <- approved_grants[row,2]
if (year == old_year){
print("same Year")
}
}
for (row in 1:nrow(approved_grants)){
year <- approved_grants[row,2]
if (year == old_year){
print("same Year")
}
old_year <- year
}
approved_grants[2,"GrantAmount"]
for (row in 1:nrow(approved_grants)){
year <- approved_grants[row,2]
if (year == old_year){
year_total <- year_total + approved_grants[row,9]
approved_grants[row, "barTotal"] <- year_total
}
else {
approved_grants[row, "barTotal"] <- approved_grants[row,9]
year_total <- 0
}
old_year <- year
}
for (row in 1:nrow(approved_grants)){
year <- approved_grants[row,2]
if (year == old_year){
approved_grants[row, "barTotal"] <- year_total
year_total <- year_total + approved_grants[row,9]
}
else {
approved_grants[row, "barTotal"] <- 0
year_total <- approved_grants[row,9]
}
old_year <- year
}
write_json(approved_grants, "C:/Users/aaron/Downloads/approvedfloridagrants.json")
cumsum(12)
cumsum(c(12,14,15)
cumsum(c(12,14,15))
cumsum((12,14,15))
vector <- c(1,2,3,4,5)
cumsum(vector)
library(dplyr)
library("rtweet")
library("ggplot2")
setwd("C:/Users/aaron/OneDrive/Documents/Columbia Journalism/Computational Journalism/Impeachalytics/")
candidates_info <- read.csv("twitter_handles.csv") #load candidates and their twitter handles
candidate_accounts <- lookup_users(as.vector(candidates_info[,1])) #load twitteruserobjects
View(candidate_accounts)
write.csv(candidate_accounts, "candidate_accounts.csv")
write.csv(as.data.frame(candidate_accounts), "candidate_accounts.csv")
typeof(candidate_accounts)
unlist(candidate_accounts)
udf <- data.frame(matrix(unlist(candidate_accounts), nrow=30, byrow=T),stringsAsFactors=FALSE)
View(candidate_accounts)
handle_vector <- as.vector(candidates_info[,1]) #vector of all the candidates handles
handle_vector <- as.vector(candidates_info[,1]) #vector of all the candidates handles
Tweets <- get_timelines(handle_vector, n=3200, retryonratelimit = TRUE) #returns 87983 tweets as a list
head(Tweets)
df_tweets <- as.data.frame(Tweets)
typeof(df_tweets)
df_tweets[1]
typeof(df_tweets[1])
typeof(df_tweets[1][1])
df_tweets[1][1]
df_tweets[[1]]
typeof(df_tweets[[1]])
df_tweets[[1]]
df_tweets[[90]]
length(Tweets)
length(unlist(Tweets))
df_tweets <- data.frame(matrix(unlist(Tweets), nrow=length(Tweets[[1]]), byrow=T))
df_tweets <- do.call(rbind.data.frame, Tweets)
for (i in Tweets){
print(length(i))
}
colnames(Tweets)
for (i in Tweets){
colname <- colnames(Tweets)[count]
print(colname)
}
colname <- colnames(Tweets)
for (i in Tweets){
colname <- colnames(Tweets[count])
print(colname)
}
count <- 1
for (i in Tweets){
colname <- names(Tweets[count])
print(colname)
}
for (i in Tweets){
colname <- names(Tweets[count])
print(colname)
count++
}
for (i in Tweets){
colname <- names(Tweets[count])
print(colname)
count <- count + 1
}
count <- 1
for (i in Tweets){
colname <- names(Tweets[count])
df_tweets$colname <- i
count <- count + 1
}
typeof(df_tweets)
as.data.frame(df_tweets)
df_tweets <- as.data.frame(df_tweets)
typeof(df_tweets)
df_tweets <- NULL
count <- 1
for (i in Tweets){
#colname <- names(Tweets[count])
#df_tweets$colname <- i[1]
print(i)
count <- count + 1
}
for (i in Tweets){
#colname <- names(Tweets[count])
#df_tweets$colname <- i[1]
print(typeof(i))
count <- count + 1
}
for (i in Tweets){
#colname <- names(Tweets[count])
#df_tweets$colname <- i[1]
print(i[1])
count <- count + 1
}
count <- 1
df_tweets <- NULL
for (i in Tweets){
colname <- names(Tweets[count])
df_tweets$colname <- i[1]
#print(i[1])
count <- count + 1
}
View(df_tweets)
count <- 1
for (i in Tweets){
colname <- names(Tweets[count])
df_tweets$colname <- i
#print(i[1])
count <- count + 1
}
View(df_tweets)
count <- 1
for (i in Tweets){
colname <- names(Tweets[count])
df_tweets$colname <- unlist(i)
#print(i[1])
count <- count + 1
}
df_tweets <- NULL
count <- 1
for (i in Tweets){
colname <- names(Tweets[count])
df_tweets$colname <- unlist(i)
#print(i[1])
count <- count + 1
}
View(df_tweets)
count <- 1
View(df_tweets)
names(Tweets)
View(df_tweets)
df_tweets <- NULL
count <- 1
typeof(Tweet)
typeof(Tweets)
typeof(Tweets[1])
typeof(Tweets[[1]])
for (i in length(Tweets)){
#colname <- names(Tweets[count])
#df_tweets$colname <- Tweets[[i]]
print(i)
count <- count + 1
}
for (i in length(Tweets[[1]])){
#colname <- names(Tweets[count])
#df_tweets$colname <- Tweets[[i]]
print(i)
count <- count + 1
}
